openapi: 3.0.3
info:
  version: 1.0.0
  title: Order management
  description: API related to management of Orders.
paths:
  /orders:
    post:
      tags:
        - Order
      summary: Creates an Order for an User. Only Users of type client are allowed to create Orders
      operationId: createOrder
      requestBody:
        description: Request body contains information related to new Order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreation'
        required: true
      responses:
        '201':
          description: Resource successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreationResponse'
        '400':
          description: Request body is invalid.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '403':
          description: User is not allowed to create Orders.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
  /orders/{order_id}:
    get:
      tags:
        - Order
      summary: Fetches Details for an Order. Only Users of type COURIER can fetch Order Details
      operationId: getOrderDetails
      parameters:
        - name: order_id
          schema:
            type: integer
            format: int64
          required: true
          in: path
          description: ID of the Order
          example: 100
      responses:
        '200':
          description: Resources successfully fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '403':
          description: User is not allowed to view order details.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'

components:
  schemas:
    OrderCreation:
      type: object
      required:
        - addressId
        - deliveryPriceLimit
        - items
      properties:
        addressId:
          description: Id of the Order's Address
          type: integer
          format: int64
          example: 100
        deliveryPriceLimit:
          description: Max limit of Delivery price
          type: number
          format: double
          minimum: 1
          example: 10
        items:
          description: Items ordered
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderCreationItem'
    OrderCreationItem:
      type: object
      required:
        - id
        - quantity
      properties:
        id:
          description: Id of the ordered Item
          type: integer
          format: int64
          example: 100
        quantity:
          description: Quantity of the ordered Item
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          example: 4
    OrderCreationResponse:
      type: object
      properties:
        addressId:
          description: Id of the Order's Address
          type: integer
          format: int64
          example: 100
        auctionDeadline:
          description: Auction deadline
          type: string
          format: date-time
          example: 2025-01-01T07L00:00.00Z
        deliveryPriceLimit:
          description: Max limit of Delivery price
          type: number
          format: double
          example: 10
        price:
          description: Price of Order before auction
          type: number
          format: double
          example: 110.50
        items:
          description: Items ordered
          type: array
          items:
            $ref: '#/components/schemas/OrderCreationItemResponse'
    OrderCreationItemResponse:
      type: object
      properties:
        id:
          description: Id of the ordered Item
          type: integer
          format: int64
          example: 100
        quantity:
          description: Quantity of the ordered Item
          type: integer
          format: int32
          example: 4
    OrderDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the Order
        deliveryAddress:
          $ref: '../openapi/address.yaml#/components/schemas/AddressDetails'
        foodPrice:
          type: number
          format: double
          description: Price of the food
        deliveryPrice:
          type: number
          format: double
          description: Delivery price
        orderStatus:
          type: string
          description: Current status of the order
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderCreationItemResponse'
