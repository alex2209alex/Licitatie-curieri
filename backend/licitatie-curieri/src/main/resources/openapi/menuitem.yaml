openapi: 3.0.3
info:
  version: 1.0.0
  title: Menu Items management
  description: API related to management of Menu Items.
paths:
  /menu-items:
    get:
      tags:
        - MenuItem
      summary: Fetches all MenuItems for Restaurant.
      operationId: getAllMenuItemsForRestaurant
      parameters:
        - name: restaurantId
          schema:
            type: integer
            format: int64
          required: true
          in: query
          description: ID of Restaurant
          example: 100
      responses:
        '200':
          description: Resources successfully fetched.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItemDetails'
        '403':
          description: User is not allowed to get MenuItems.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Restaurant with provided ID not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
    post:
      tags:
        - MenuItem
      summary: Creates MenuItem
      operationId: createMenuItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemCreation'
        required: true
      responses:
        '201':
          description: Resource successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemCreationResponse'
        '400':
          description: Invalid data provided.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '403':
          description: User is not allowed to create MenuItems.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Restaurant with provided id was not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
  /menu-items/{menu_item_id}:
    get:
      tags:
        - MenuItem
      summary: Fetches MenuItem by Id.
      operationId: getMenuItem
      parameters:
        - name: menu_item_id
          schema:
            type: integer
            format: int64
          required: true
          in: path
          description: ID of MenuItem
          example: 100
      responses:
        '200':
          description: Resources successfully fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemDetails'
        '403':
          description: User is not allowed to get MenuItems.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: MenuItem with provided ID not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
    put:
      tags:
        - MenuItem
      summary: Update a Menu Item
      operationId: updateMenuItem
      parameters:
        - name: menu_item_id
          in: path
          description: ID of Menu Item who needs to be removed
          schema:
            type: integer
            format: int64
          required: true
          example: 100
      requestBody:
        description: Request body contains information related to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemUpdate'
      responses:
        '200':
          description: Menu Item updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemUpdateResponse'
        '400':
          description: Request body is invalid.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '403':
          description: User is not allowed to update MenuItems.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: MenuItem not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
    delete:
      tags:
        - MenuItem
      summary: Removes a Menu Item from Restaurant Menu
      operationId: removeMenuItem
      parameters:
        - name: menu_item_id
          in: path
          description: ID of Menu Item who needs to be removed
          schema:
            type: integer
            format: int64
          required: true
          example: 100
      responses:
        '200':
          description: Successfully removed the Menu Item.
        '403':
          description: User is not allowed to remove Menu Items.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Menu Item not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
components:
  schemas:
    MenuItemCreation:
      type: object
      required:
        - restaurantId
        - name
        - price
        - ingredientsList
        - photo
        - discount
      properties:
        restaurantId:
          description: Restaurant's ID
          type: integer
          format: int64
          example: 100
        name:
          description: MenuItem's name
          type: string
          maxLength: 100
          example: Pizza Diavola
        price:
          description: MenuItem's price
          type: number
          format: double
          minimum: 0
          example: 44.43
        ingredientsList:
          description: MenuItem's ingredients list
          type: string
          maxLength: 500
          example: Tomato sauce, mozzarella cheese, spicy salami, fresh chili peppers, olives, oregano
        photo:
          description: MenuItem's photo
          type: string
          example: TBD...
        discount:
          description: MenuItem's discount
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 0.00
    MenuItemCreationResponse:
      type: object
      properties:
        id:
          description: MenuItem's ID
          type: integer
          format: int64
          example: 100
        name:
          description: MenuItem's name
          type: string
          example: Pizza Diavola
        price:
          description: MenuItem's price
          type: number
          format: double
          example: 44.43
        ingredientsList:
          description: MenuItem's ingredients list
          type: string
          example: Tomato sauce, mozzarella cheese, spicy salami, fresh chili peppers, olives, oregano
        photo:
          description: MenuItem's photo
          type: string
          example: TBD...
        discount:
          description: MenuItem's discount
          type: number
          format: double
          example: 0.00
    MenuItemUpdate:
      type: object
      required:
        - name
        - price
        - ingredientsList
        - photo
        - discount
      properties:
        name:
          description: MenuItem's name
          type: string
          maxLength: 100
          example: Pizza Diavola2
        price:
          description: MenuItem's price
          type: number
          format: double
          minimum: 0
          example: 44.43
        ingredientsList:
          description: MenuItem's ingredients list
          type: string
          maxLength: 500
          example: Tomato sauce, mozzarella cheese, spicy salami, fresh chili peppers, olives, oregano
        photo:
          description: MenuItem's photo
          type: string
          maxLength: 100
          example: TBD...
        discount:
          description: MenuItem's discount
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 0.00
    MenuItemUpdateResponse:
      type: object
      properties:
        id:
          description: MenuItem's ID
          type: integer
          format: int64
          example: 100
        name:
          description: MenuItem's name
          type: string
          example: Pizza Diavola2
        price:
          description: MenuItem's price
          type: number
          format: double
          example: 44.43
        ingredientsList:
          description: MenuItem's ingredients list
          type: string
          example: Tomato sauce, mozzarella cheese, spicy salami, fresh chili peppers, olives, oregano
        photo:
          description: MenuItem's photo
          type: string
          example: TBD...
        discount:
          description: MenuItem's discount
          type: number
          format: double
          example: 0.00
    MenuItemDetails:
      type: object
      properties:
        id:
          description: MenuItem's ID
          type: integer
          format: int64
          example: 100
        name:
          description: MenuItem's name
          type: string
          example: Pizza Diavola2
        price:
          description: MenuItems price
          type: number
          format: double
          example: 44.43
        ingredientsList:
          description: MenuItem's ingredients list
          type: string
          example: Tomato sauce, mozzarella cheese, spicy salami, fresh chili peppers, olives, oregano
        photo:
          description: MenuItem's photo
          type: string
          example: TBD...
        discount:
          description: MenuItem's discount
          type: number
          format: double
          example: 0.00