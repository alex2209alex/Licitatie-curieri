openapi: 3.0.3
info:
  version: 1.0.0
  title: Restaurant management
  description: API related to management of Restaurants.
paths:
  /restaurants:
    get:
      tags:
        - Restaurant
      summary: Fetches Restaurants in the area of an Address. Only Users of type client can fetch Restaurants
      operationId: getRestaurants
      parameters:
        - name: address_id
          schema:
            type: integer
            format: int64
          required: true
          in: query
          description: ID of User's Address around which he is searching for Restaurants
          example: 100
      responses:
        '200':
          description: Resources successfully fetched.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestaurantDetails'
        '403':
          description: User is not allowed to get Restaurants.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: User's Address with provided ID not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
    post:
      tags:
        - Restaurant
      summary: Create a new Restaurant
      operationId: createRestaurant
      requestBody:
        description: Data needed to create a new restaurant
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantCreation'
      responses:
        '201':
          description: Restaurant created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantCreationResponse'
        '400':
          description: Invalid data provided.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '403':
          description: User is not allowed to create Restaurants.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
  /restaurants/{restaurant_id}:
    get:
      tags:
        - Restaurant
      summary: Get Restaurant details
      operationId: getRestaurant
      parameters:
        - name: restaurant_id
          schema:
            type: integer
            format: int64
          required: true
          in: path
          description: ID of Restaurant
          example: 100
      responses:
        '200':
          description: Resources successfully fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantDetails'
        '403':
          description: User is not allowed to get Restaurants.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Restaurant with provided ID not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
    put:
      tags:
        - Restaurant
      summary: Update a Restaurant
      operationId: updateRestaurant
      parameters:
        - name: restaurant_id
          schema:
            type: integer
            format: int64
          required: true
          in: path
          description: ID of Restaurant
          example: 100
      requestBody:
        description: Data needed to update name for restaurant
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantUpdate'
      responses:
        '200':
          description: Restaurant successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantUpdateResponse'
        '403':
          description: User is not allowed to update Restaurants.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Restaurant with provided Id not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
    delete:
      tags:
        - Restaurant
      summary: Remove a Restaurant
      operationId: removeRestaurant
      parameters:
        - name: restaurant_id
          schema:
            type: integer
            format: int64
          required: true
          in: path
          description: Id of Restaurant who needs to be removed
          example: 100
      responses:
        '200':
          description: Successfully removed the Restaurant.
        '403':
          description: User is not allowed to remove Restaurants.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
        '404':
          description: Restaurant not found.
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/GenericApplicationError'
components:
  schemas:
    RestaurantDetails:
      type: object
      properties:
        id:
          description: Restaurant's ID
          type: integer
          format: int64
          example: 100
        name:
          description: Restaurant's name
          type: string
          maxLength: 100
          example: Restaurant Pizzeria
        address:
          $ref: '#/components/schemas/AddressDetails'
    AddressDetails:
      type: object
      properties:
        id:
          description: Address's ID
          type: integer
          format: int64
          example: 100
        details:
          description: Address's details
          type: string
          example: Str. Strada Nr. 1
        latitude:
          description: Address's latitude
          type: number
          format: double
          example: 44.439663
        longitude:
          description: Address's longitude
          type: number
          format: double
          example: 26.096306
    RestaurantCreation:
      type: object
      required:
        - name
        - addressDetails
        - latitude
        - longitude
      properties:
        name:
          description: Restaurant's name
          type: string
          maxLength: 100
          example: Restaurant Pizzeria
        addressDetails:
          description: Restaurant's Address details
          type: string
          maxLength: 100
          example: Str. Strada Nr. 1
        latitude:
          description: Restaurant's latitude
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 44.439663
        longitude:
          description: Restaurant's longitude
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 26.096306
    RestaurantCreationResponse:
      type: object
      properties:
        id:
          description: Restaurant's ID
          type: integer
          format: int64
          example: 100
        name:
          description: Restaurant's name
          type: string
          example: Restaurant Pizzeria
        addressId:
          description: Restaurant's Address Id
          type: integer
          format: int64
          example: 100
        addressDetails:
          description: Restaurant's Address details
          type: string
          example: Str. Strada Nr. 1
        latitude:
          description: Restaurant's latitude
          type: number
          format: double
          example: 44.439663
        longitude:
          description: Restaurant's longitude
          type: number
          format: double
          example: 26.096306
    RestaurantUpdate:
      type: object
      required:
        - name
      properties:
        name:
          description: Restaurant's name
          type: string
          maxLength: 100
          example: Restaurant Pizzeria
    RestaurantUpdateResponse:
      type: object
      properties:
        id:
          description: Restaurant's ID
          type: integer
          format: int64
          example: 100
        name:
          description: Restaurant's name
          type: string
          maxLength: 100
          example: Restaurant Pizzeria
        addressId:
          description: Restaurant's Address Id
          type: integer
          format: int64
          example: 100
        addressDetails:
          description: Restaurant's Address details
          type: string
          example: Str. Strada Nr. 1
        latitude:
          description: Restaurant's latitude
          type: number
          format: double
          example: 44.439663
        longitude:
          description: Restaurant's longitude
          type: number
          format: double
          example: 26.096306